within GNU_ScientificLibrary.Examples.integration;

class IntegrationUsersGuide "User's Guide for GSL Integration Blocks/Functions"
  // contact: tommy.burch@physik.uni-r.de
  extends Modelica.Icons.Information;
  annotation(preferredView = "info",
    Documentation(info = "<html><head></head><body><span style=\"font-family: 'DejaVu Sans Mono'; font-size: 12px;\">IMPORTANT!!!: An integrand-setup model (e.g., 'ExampleIntegral.CreateIntegrand' or a duplicate) must be run before using GSL integration routines within a larger Modelica model. (Alternatively, one could edit integrand.c directly and then compile \"by hand\" in a command window:</span><div style=\"font-family: 'DejaVu Sans Mono'; font-size: 12px;\"><span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>gcc -fPIC -c integrand.c integration_mi.c</div><div style=\"font-family: 'DejaVu Sans Mono'; font-size: 12px;\"><span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>gcc -shared integration.o integration_mi.o -o libgsl_integration_MI.so &nbsp;[.dll for windows])</div><div style=\"font-family: 'DejaVu Sans Mono'; font-size: 12px;\"><br></div><div style=\"font-family: 'DejaVu Sans Mono'; font-size: 12px;\"><div>Integrand-setup-model USAGE: To create an integrand, simply duplicate one of the example models (like 'CreateIntegrand') and change the String 'C_integrand' for the desired mathematical function in standard C-syntax. This setup model then needs to be \"simulated\" (it actually only copies/creates files, compiles and archives them) before the simulation of a larger model. The larger model may then include multiple uses of the relevant 'integrand' (e.g., in qag or other GSL integration routines).</div><div><br></div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>example function: &nbsp;c*e<sup>-p*x*x</sup>&nbsp;= c*exp(-p*x<sup>2</sup>)&nbsp;</div><div><span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>in C-syntax: &nbsp; &nbsp; &nbsp;\"par[0]*exp(-par[1]*x*x)\"&nbsp;</div><div><br></div><div><div>Note the possibility to place parameters (always with 'par' and always starting with index 0). The values of these can then be set during the larger model runtime (see the integration blocks).</div></div><div><br></div><div>[A bit more info: If one is not already present in the model, a direct call to a GSL function appears to be required to have the GSL library load along with the GSL/Modelica interface ('gsl_integration_MI'). E.g.,...&nbsp;</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>final&nbsp;parameter Real kludge = Functions.specfunc.gamma(1);&nbsp;</div><div>These are put in at the integration function level, so no further action should be necessary on the user's part.]&nbsp;</div><div><pre style=\"margin-top: 0px; margin-bottom: 0px;\"><!--EndFragment--></pre></div></div></body></html>"));
end IntegrationUsersGuide;